from typing import List, Optional, Protocol

from app.features.auth.entities.user import User


class PasswordHasher(Protocol):
    def hash(self, raw: str) -> str: ...
    def verify(self, raw: str, hashed: str) -> bool: ...
    def needs_rehash(self, hashed: str) -> bool: ...


class TokenService(Protocol):
    def issue_access(self, user: User, scopes: List[str] | None = None) -> str: ...
    def parse(self, token: str) -> Optional[User]: ...


class UserRepository(Protocol):
    async def by_id(self, user_id: str) -> Optional[User]: ...
    async def by_email(self, email: str) -> Optional[User]: ...
    async def by_username(self, username: str) -> Optional[User]: ...
    async def save(self, u: User) -> User: ...
    async def update(self, u: User) -> User: ...
